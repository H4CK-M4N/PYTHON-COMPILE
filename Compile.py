#=====Setting=====#
import os, sys, zlib, base64, marshal, binascii, py_compile, requests, time
from typing import NamedTuple
from random import randint
#=====Address=====#
ip = requests.get('https://api.ipify.org').text.strip()
loc = requests.get('https://ipapi.com/ip_api.php?ip=' + ip, headers={'Referer': 'https://ip-api.com/', 'Content-Type': 'application/json; charset=utf-8', 'User-Agent': 'Mozilla/5.0 (Linux; Android 7.1.2; Redmi 4X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.92 Mobile Safari/537.36'}).json()['country_name'].lower()
#=====Animation=====#
def mkdir(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.001)
#=====Banner&Logo=====#
banner = """
+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
|. . . . . . . . . . [*] Author: MELANIN. . . . . . . . . . . . . |  
|. . . . . . . . . . [*] Python Compile Tool. . . . . . . . . . . . . |
|. . . . . . . . . . [*] Version: 1.2 . . . . . . . . . . . . . . . . |  
|. . . . . . . . . . [*] Github: github.com/H4CK-M4N . . . . . . . . |
|. . . . . . . . . . [*] WhatsApp: +2349150557103. . . . . . . . . . . . |  
|. . . . . . . . . . [*] Instagram: iam_melanin_. . . . . . . . |
|. . . . . . . . . . [*] The tool can use on Windows,Linux and Android|
+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +          
"""
listcompile = """
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       01      | Compile Marshal                   | Repeat: Max 400 |
|       02      | Compile Marshal > Base64          | Repeat: Max 400 |
|       03      | Compile Marshal > Base64 > Pycom  |        X        |
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       04      | Compile 1                         | Anti Decompile  |
|       05      | Compile 2                         | Anti Decompile  |
|       06      | Compile 3                         | Anti Decompile  |
|       07      | Compile 4                         | Anti Decompile  |
|       08      | Compile 5                         | Anti Decompile  |  
|       09      | Compile 6                         | Anti Decompile  |
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       10      | Base 16                           | Repeat: Max 200 |
|       11      | Base 32                           | Repeat: Max 200 |
|       12      | Base 64                           | Repeat: Max 200 |
|       13      | Base64 & Marshal                  | Repeat: Max 200 |
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       14      | Compile Zlib                      | Repeat: Max 200 |
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       15      | Compile Pyc Inject Note           |        X        |
+ - - - - - - - + - - - - - - - - - - - - - - - - - + - - - - - - - - +
|       00      | Exit                              | Exit Program    |
+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
"""
f = "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
def logo():
    mkdir(banner)
    mkdir("IP: "+ip)
    mkdir("Location: "+loc)
    mkdir(f)
#=====Login=====#
def login():
    os.system("cls" if os.name == "nt" else "clear")
    logo()
    mkdir('Liscense key Provided by Axeyed Tran')
    key = input('[?] License Key:')
    if key == 'AxeyedTranCompileV1.2':
        mkdir('[*] Correct License key')
        time.sleep(3)
        mkdir('[*] Please Wait, Tool Is loading...')
        time.sleep(5)
        menu()
    else:
        mkdir('[!] Invalid License Key')
        exit()
#=====Menu=====#
def menu():
    os.system("cls" if os.name == "nt" else "clear")
    logo()
    mkdir(listcompile)
    choice = input('[?] Choose Option:')
    if choice == '1' or choice == '01':
        cM()
    if choice == '2' or choice == '01':
        cM_bs64()
    if choice == '3' or choice == '01':
        cM_bs64_pycom()
    if choice == '4' or choice == '01':
        c1()
    if choice == '5' or choice == '01':
        c2()
    if choice == '6' or choice == '01':
        c3()
    if choice == '7' or choice == '01':
        c4()
    if choice == '8' or choice == '01':
        c5()
    if choice == '9' or choice == '01':
        c6()
    if choice == '10':
        bs16()
    if choice == '11':
        bs32()
    if choice == '12':
        bs64()
    if choice == '13':
        bs64_marshal()
    if choice == '14':
        zli()
    if choice == '15':
        pycit()
    if choice == '0' or choice == '00':
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('Thank You For Using My Tool')
        exit()
    else:
        mkdir('[!] Invalid Option')
        exit()
#=====Compile=====#
cout = 0
def cM():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Marshal ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 400:
            out = file.replace('.py', '') + '_encoded.py'
            oa = open(file).read()
            ni = compile(oa, '[Axeyed]', 'exec')
            bo = marshal.dumps(ni)
            ab = repr(bo)
            s = open(out, 'w')
            s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(ab)+'))')
            s.close()
            while True:
                if cot >= cout:
                    nz = open(out).read()
                    dn = compile(nz, '[Axeyed]', 'exec')
                    bx = marshal.dumps(dn)
                    nl = repr(bx)
                    ns = open(out, 'w')
                    ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(nl)+'))')
                    ns.close()
                    cout += 1
                    continue
                break
            mkdir('Done Bro !')
            input('Back To Menu?')
            menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def cM_bs64():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Marshal > Base64 ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 400:
            out = file.replace('.py', '') + '_encoded.py'
            oa = open(file).read()
            ni = compile(oa, '[Axeyed]', 'exec')
            bo = marshal.dumps(ni)
            ab = repr(bo)
            s = open(out, 'w')
            s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(ab)+'))')
            s.close()
            while True:
                if cot >= cout:
                    nz = open(out).read()
                    dn = compile(nz, '[Axeyed]', 'exec')
                    bx = marshal.dumps(dn)
                    nl = repr(bx)
                    ns = open(out, 'w')
                    ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(nl)+'))')
                    ns.close()
                    cout += 1
                    continue
                break
            mx = open(out).read()
            nl = base64.b32encode(mx)
            xn = open(out, 'w')
            xn.write("# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b32decode('%s'))\n" % nl)
            xn.close()
            mkdir('Done Bro !')
            input('Back To Menu?')
            menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def cM_bs64_pycom():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Marshal > Base64 > Pycom ]')
        file = input('[?] File:')
        cot = int(10)
        if cot < 400:
            out = file.replace('.py', '') + '_encoded.py'
            oa = open(file).read()
            ni = compile(oa, '[Axeyed]', 'exec')
            bo = marshal.dumps(ni)
            ab = repr(bo)
            s = open(out, 'w')
            s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(ab)+'))')
            s.close()
            while True:
                if cot >= cout:
                    nz = open(out).read()
                    dn = compile(nz, '[Axeyed]', 'exec')
                    bx = marshal.dumps(dn)
                    nl = repr(bx)
                    ns = open(out, 'w')
                    ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads('+str(nl)+'))')
                    ns.close()
                    cout += 1
                    continue
                break
            mx = open(out).read()
            nl = base64.b32encode(mx)
            xn = open(out, 'w')
            xn.write("# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b32decode('%s'))\n" % nl)
            xn.close()
            mkdir('Done Bro !')
            input('Back To Menu?')
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()      
    except EOFError:
        sys.exit()
def c1():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 1 ]')
        file = input('[?] File:')
        out = file.replace('.py', '') + '_encoded.py'
        oa = open(file).read()
        u = []
        c = []
        for x in oa:
            u.append(ord(x))
        for a in u:
            c.append('n' * a)
        fi = 'd={}\nexec("".join([chr(len(i)) for i in d]))'.format(c)
        og = open(out, 'w')
        og.write(fi)
        og.close()
        oa = open(out).read()
        cot = int(50)
        ni = compile(oa, '[Axeyed]', 'exec')
        bo = marshal.dumps(ni)
        ab = repr(bo)
        s = open(out, 'w')
        s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads(' + str(ab) + '))')
        s.close()
        while True:
            if cot >= cout:
                nz = open(out).read()
                dn = compile(nz, '[Axeyed]', 'exec')
                bx = marshal.dumps(dn)
                nl = repr(bx)
                ns = open(out, 'w')
                ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads(' + str(nl) + '))')
                ns.close()
                cout += 1
                continue
            break
        mx = open(out).read()
        nl = base64.b32encode(mx)
        xn = open(out, 'w')
        xn.write("# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b32decode('%s'))\n" % nl)
        xn.close()
        op = open(out).read()
        g = []
        d = []
        for c in op:
            g.append(ord(c))
        for o in g:
            d.append('x' * o)
        fi = 'd={}\nexec("".join([chr(len(i)) for i in d]))'.format(d)
        og = open(out, 'w')
        og.write(fi)
        og.close()
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def c2():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 2 ]')
        ia = input('[?] File:')
        a = open(ia).read()
        z = []
        u = []
        for x in a:
            z.append(ord(x))
        for c in z:
            u.append(zlib.compress(str(c)))
            o = []
        for p in u:
            o.append(marshal.dumps(p))
        fip = 'import marshal;import zlib\nd={}\nexec("".join([chr(int(zlib.decompress(marshal.loads(i)))) for i in d]))'.format(o)
        js = ia.replace('.py', '_encoded.py')
        ox = open(js, 'w')
        ox.write(fip)
        ox.close()
        bx = open(js).read()
        xs = binascii.hexlify(bx)
        fc = 'exec ("{}").decode("hex")'.format(xs)
        nk = open(js, 'w')
        nk.write(fc)
        nk.close()
        py_compile.compile(js)
        os.system('rm ' + js)
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def c3():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 3 ]')
        ia = input('[?] File')
        bc = open(ia).read()
        xs = binascii.hexlify(bc)
        js = ia.replace('.py', '_encoded.py')
        fc = 'exec ("{}").decode("hex")'.format(xs)
        nk = open(js, 'w')
        nk.write(fc)
        nk.close()
        p = []
        n = []
        gn = open(js).read()
        for l in gn:
            p.append(ord(l))
        for b in p:
            n.append('x' * b)
        fin = 'd={}\nexec("".join([chr(len(i)) for i in d]))'.format(n)
        bp = open(js, 'w')
        bp.write(fin)
        bp.close()
        py_compile.compile(js)
        os.system('rm ' + js)
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def c4():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 4 ]')
        ia = input('[?] File:')
        bc = open(ia).read()
        js = ia.replace('.py', '_encoded.py')
        a = []
        b = []
        bin = ''
        xUn = compile(bc, '[Axeyed]', 'exec')
        xGs = marshal.dumps(xUn)
        bin += binascii.hexlify(xGs)
        for g in bin:
            a.append(ord(g) - 9)
        for lx in range(len(a)):
            b.append(randint(1, 120))
        c = []
        d = 0
        for x in b:
            c.append(9 * b[d])
            d += 1
        x_x = lambda : randint(1, 255)
        xz = []
        na = open(js, 'w')
        na.write('import marshal\n_ = ' + str(b) + '\n__ = ' + str(c) + '\nOoO_ = ' + str(a) + '\nu = ( ( { } < ( ) ) - ( { } < ( ) ) )\nimport marshal\nx = lambda f_ : marshal.loads(f_)\np = (({}<())-({}<()))\nv = []\nexec((lambda:((()>())+(()<()))).func_code.co_lnotab).join(map(chr,[(((((((({}=={})+([]>={})+({}<[]))+(({}<[])+({}<[])+({}!=[]))+((()>{})*([]<=())))<<((({}>={})+(()>{}))))-((({}<=[])+({}>{})))))<<((({}<[])+(()==()))))),((((((((()==())*(()<=())))<<((([]>=[])+({}=={}))+((()==())+(()>={}))))-((([]>={})*({}!=[])))))<<((({}=={})+({}<[])+(()!={}))))),((((([]==())+([]!={})))<<((({}<[])+({}<[]))+((()>=[])+({}<()))+(({}!=[])+(()<=[]))))),(((((((({}>=())+({}!=())))<<(((()>{})+([]<=()))+(({}!=())+({}<=()))))-((([]==())+({}<={})))))<<((([]>={})+({}<=[]))))+((([]==[])+({}==())))),((((({}>={})-(()!=())))<<(((()>=())+({}<=[]))+((()>{})+([]>{}))+((()==())-([]<{}))))),(((((((([]==[])+(()>{})+(()>{})))<<(((()>[])+(()>={})+([]>=[]))))-(((()!={})+({}<{})))))<<((({}!=[])+({}>={}))))-((({}<())*([]==[])))),((((((((()==())+({}!=[])+({}<[])))<<(((()<=())+({}<[])+({}>={}))))-((({}<=[])+({}!={})))))<<((([]!={})+({}=={}))))+((([]<())-({}>[])))),((((({}>={})+([]<()))+((()!=[])+(()!={}))+(({}!=[])*({}<())))<<(((()>={})+([]>()))))),(((((((((({}<=())+({}!=())+({}<[])))<<((({}=={})+([]!={}))))+(((()<=())-([]<{})))))))<<((({}<())+({}<[])+(()>={}))))-((((()!=())+(()>[])))<<(((()<[])+(()>={}))))),(((((()!=[])+(()>={})+(()>=[]))+(({}<[])+([]<=())+(()==()))+(({}==())+(()!=[])))<<((({}!=())+([]!=()))+(({}<())+({}>={}))))-((({}<={})-(()<{})))),((((([]>={})+([]!={})+([]>={}))+((()<=())+([]>={})+(()!=[]))+((()!={})+([]<={})))<<((([]!=())+({}<[]))+(({}<())+({}!=[]))))+(((({}>={})+([]<[])))<<((({}<[])+(()<={}))))),(((((()>=())+(()<())))<<((([]!=())+({}<={}))+((()>=[])+({}<[]))+((()!=[])+(()!=()))))),((((({}<[])+([]==[])+([]>{})))<<((([]>{})+([]!={}))+((()>=())+({}<=[]))+(([]<{})+({}=={}))))-(((()>=[])*(()!={})))),((((((((()>{})+(()!=())))<<((([]>=[])+(()>=()))+(({}<={})+([]>{}))))+((([]!=())*([]!={})))))<<(((()!=[])+(()!=[]))))-((([]>=())+(()>{})))),(((((()>[])+({}<=[])+(()>={}))+((()!=[])+({}=={})+({}!=()))+((()<{})+({}!=())))<<((({}<[])+({}!=()))+(([]>={})+(()>=()))))-((({}==[])+([]<())))),((((([]<())+({}>={})+({}<[]))+((()>{})+({}<[])+(()>={}))+((()==())+({}>[])))<<((({}!=[])+(()>{}))+(({}>={})+(()<=()))))-(((({}>={})*([]>{})))<<((([]>={})-({}>=()))))),((((([]<=[])+(()!={})+({}<[])))<<((({}>={})+([]<=[]))+((()!=[])+([]>={}))+(({}<())+([]<[]))))-((([]==())+(()!=[])))),(((((((((([]==[])+({}!=[])+({}<[])))<<(((()>=[])+({}<=()))))-(((()==())*(()<=())))))))<<((([]>={})+(()>=[])+({}!=()))))-(((([]>=[])+([]<={})))<<(((()!=[])*({}!=[]))))),(((((()!=[])+({}>={})+([]!=())))<<((([]<=())+([]!={}))+(({}<=[])+([]>{}))+((()>[])+({}<{}))))+((({}>={})+({}==[])))),(((((()>=[])+([]>{})+(()>=[]))+((()!=[])+(()>[])+([]>=[]))+(({}<[])+([]!=[])))<<((([]<=())+(()>={}))+((()!={})+({}>={}))))+((((()!=[])+(()>())))<<((({}<={})*({}<()))))),(((((()>={})+(()>=())+([]!=()))+(([]>=[])+(()>=())+([]>{}))+(([]!=())-(()>())))<<((({}>={})+([]<()))+(([]!=())+({}<[]))))-(((([]!=[])+([]!=())))<<((({}!=())+(()>()))))),((((({}>={})+([]<())+({}<[])))<<((([]>={})+(()==()))+((()!={})+({}!=[]))+((()==())-(()<{}))))+((({}=={})-([]<={})))),(((((((([]==[])+([]<=())+(()!={}))+(([]!=())+({}<=())+({}=={}))+((()!={})*({}!=[])))<<(((()>=[])+([]>={}))))-((({}<())-([]!=[])))))<<((([]!=())+([]<=()))))+((({}>={})*(()>=[])))),(((((((({}<=[])+([]==[])+({}<=[])))<<((([]>=[])+({}<={})+(()>={}))))+((({}<=())-({}>=[])))))<<((({}<())+({}<={}))))+((([]!={})*(()>=[])))),((((({}<())+([]>{})+([]!=()))+(({}!=[])+([]<=())+([]<=()))+(([]<=[])*([]<=())))<<(((()<=())+(()>=[]))+(([]<())+(()==()))))+((([]!={})+([]!=())+({}<())))),(((((()==())*({}<=[])))<<((({}=={})+([]>{}))+((()>=())+([]!={}))+(([]>{})-({}>=[]))))),(((((((((({}!=[])+([]<=[])+({}<=[])))<<((({}<={})+({}<[]))))+(((()>[])*(()!={})))))))<<((({}<())+({}=={})+([]!=()))))+(((()>=())-(()==[])))),((((({}<=[])+({}<[])+({}=={}))+(([]>={})+({}<())+(()!={}))+((()>[])*({}>={})))<<((({}<[])+(()>=()))+((()>={})+({}>={}))))-(((([]>[])+({}=={})))<<(((()>={})-(()==[]))))),(((((()!=[])*(()>[])))<<((({}<=())+(()>=[]))+(([]<=[])+(()!=[]))+(({}<=())+(()==[]))))),((((([]>=[])+({}!=())+(()>=()))+(([]<=())+({}!=())+({}>={}))+((()!=())+([]>=[])))<<(((()==())+(()>[]))+((()==())+([]!=()))))+(((([]>=[])-({}==())))<<(((()!=())+(()>=[]))))),((((([]!={})+([]>={})+({}<=())))<<(((()==())+({}<[]))+(({}<())+([]<=()))+(({}!=[])*({}=={}))))+((([]<=[])+({}!={})))),((((({}<())+({}<())+([]!=()))+(({}<[])+({}!=())+({}<()))+(({}!={})+({}!=())))<<((([]>{})+({}=={}))+(({}<=())+([]<()))))-(((({}==[])+([]>={})))<<(((()<=())+(()<={}))))),(((((((((([]<=())+([]<=())+([]!=())))<<(((()!=[])+([]<=[]))))+((({}<[])-([]==())))))))<<((([]<())+(()==())+({}!=()))))-((([]>=[])-([]==())))),(((((((({}!=())+(()!={})+([]>=[])))<<(((()!={})+(()<=())+({}<={}))))+((({}=={})-(()<=[])))))<<((({}!=())+(()==()))))+((([]==[])+([]==())))),((((([]<=())+([]<=()))+(({}=={})+([]>=[]))+(([]<{})+(()!={})))<<(((()>=())+({}!=[])+({}!=[]))))),((((((((()==())+(()>=[])+(()!={}))+((()==())+([]>={})+({}<[]))+(([]<())*([]>=[])))<<((({}=={})+({}!=()))))-((([]<=())-({}>{})))))<<(((()>=[])+([]>{}))))),((((((((()>[])+({}>={})+({}>={})))<<(((()<=())+(()>[])+(()>={}))))+((([]>())+({}<=())))))<<((({}=={})+([]>={}))))+(((()!=[])*([]>{})))),((((({}!=[])+([]<=[])+(()>=()))+(({}<[])+([]==[])+(()>=[]))+(([]<())*([]==[])))<<((({}=={})+({}<()))+(({}>={})+([]<=()))))-((((()>{})-(()!=())))<<((([]<[])+([]!=()))))),(((((()>={})+([]==[]))+((()!={})+(()<=()))+(([]>={})-({}>=())))<<(((()>={})+({}<())+({}!=[]))))),(((((()>=())+(()>=[])+({}<[])))<<((([]!=())+(()>[]))+((()<=())+({}<()))+((()==[])+([]<=()))))-((([]<=[])+({}>=())))),((((({}!=[])+([]>={})+([]==[])))<<(((()!={})+([]<=()))+(([]!={})+(()>={}))+(({}!={})+({}!=()))))-((([]<=())*(()!={})))),(((((()>{})+(()>=()))+(([]!=())+({}=={}))+((()<={})+([]<=[])))<<((({}<[])+({}<=[])+(()>=()))))+((({}>={})*({}<())))),((((([]==[])+(()!={}))+((()!={})+(()<=()))+((()!={})+([]<[])))<<((([]!=())+(()>=())+({}>={}))))+((({}<=())+([]>=())))),(((((()==())+([]>{})+([]>={}))+((()<=())+([]>={})+(()!=[]))+((()==())-([]==())))<<((({}>={})+([]>={})+([]<()))))+(((([]<=[])*([]>={})))<<(((()<=())+({}==[]))))),((((({}!=[])+({}<()))+((()!=[])+([]<()))+(([]<())-(()<[])))<<((({}<=[])-(()!=()))))),(((((((((((()=={})+(()>={})))<<(((()>=())+(()==())+([]<=()))))+((({}<=[])*({}<={})))))))))),((((((((()>{})+({}>=())))<<((([]!=())+(()!=[]))+(({}>={})+({}<={}))))-((({}>=())+(()>=[])))))<<(((()>=[])+([]!={})+([]<=()))))-((((()>[])*([]!={})))<<((({}!=[])+([]>()))))),(((((((({}<())+([]>{})+(()>={})))<<((({}=={})+(()!=[])+([]!=()))))-(((()!=[])*(()!={})))))<<((([]>={})*({}=={}))))),((((([]>=[])+([]>=[])+({}<())))<<(((()>=())+(()>=()))+((()>[])+({}>={}))+(({}<=[])-({}==[]))))+((({}=={})*([]!={})))),((((([]!={})+([]<=())+({}<()))+(({}<=[])+({}>={})+(()==()))+(([]==[])-(()=={})))<<((({}<())+([]<=[]))+((()>{})+(()>={}))))),((((({}<={})+([]>{})+(()>=[]))+((()!={})+({}<[])+({}<=()))+(({}!=())*([]==[])))<<((([]<=())+([]>=[]))+(([]!=())+(()>=()))))),((((((((()>=[])+(()>=())+(()>=[])))<<(((()>={})+(()>={})+([]<=()))))+((([]=={})+({}<[])))))<<((([]>={})+(()>={}))))+((([]<=[])*({}!=[])))),((((([]!={})+(()>=())+({}<={}))+(({}<=())+({}=={})+({}<=[]))+(([]>{})+(()<())))<<(((()>={})+([]>{}))+(({}<=())+(()==()))))-(((({}<[])-([]<={})))<<(((()=={})+([]!={}))))),(((((((({}<[])+(()!=[])+({}<())))<<((({}!=[])+(()!={})+(()<=()))))+((({}<{})+([]==[])))))<<((([]>=[])+(()>[]))))),((((([]>{})+({}!=[]))+(([]==[])+([]<=()))+(([]<())+(()>())))<<((({}=={})+(()!=[])+([]!={}))))),((((({}<())+([]<=[])+([]<=())))<<((({}<=[])+([]<()))+(({}>={})+({}<=()))+(({}<[])-({}<{}))))-((({}!=())*({}<={})))),(((((()>[])+([]<=())+(()>=[])))<<((([]==[])+([]<()))+(([]<=[])+({}<=()))+(({}=={})+([]<={}))))-(((()==())+({}<{})))),(((((((({}<=())+({}<={})+(()>={})))<<((({}!=())+([]!={})+([]>=[]))))-((([]==[])*([]>{})))))<<(((()>=())+([]==[]))))-((([]<=[])+({}>=())))),(((((((([]>={})*(()>=[])))<<((([]<())+(()>[]))+((()!={})+({}<={}))))-((([]!={})+({}>[])))))<<(((()>={})+(()!={})+([]!=()))))-((({}!=())+([]!={})+(()<=())))),((((((((()<=())+([]<=[])+(()==())))<<((([]>={})+([]<=[])+([]>{}))))-((([]>=[])-(()<={})))))<<(((()<=())+([]!={}))))+((([]!=())*(()>=[])))),(((((()<())+({}<={})))<<((({}=={})+([]<=()))+((()<=())+({}<=[]))+(([]==[])-(()<={}))))),((((({}>={})+({}>={})+({}>={})))<<((([]>=[])+(()!=[]))+(([]>={})+([]>{}))))-(((()!={})+([]<[])))),(((((()>={})-([]=={})))<<(((()>={})+([]<()))+(([]!={})+([]>={}))+(({}!=[])-(()!=()))))),((((({}<())+(()>[])+(()>{})))<<((({}<())+([]<=()))+(({}<=())+([]>={}))+(({}!=())+({}>=[]))))-((([]!={})+([]!=[])))),(((((((([]==[])+(()!=[])+({}>={})))<<((({}<={})+(()==())+({}=={}))))-(((()>=())*(()>{})))))<<((({}<=[])+({}>={}))))-((({}<{})+(()>[])))),((((([]>=[])+([]<=())+({}!=()))+(([]<())+({}>={})+([]<=()))+(({}>={})-(()=={})))<<(((()!={})+([]>{}))+((()>=[])+(()!={}))))),(((((((({}<=[])+({}!=[])+({}=={})))<<((([]>{})+(()>=())+({}<={}))))-((({}<())*(()==())))))<<((({}<={})+({}!=()))))+(((()<=())-({}>=())))),((((([]>={})+(()>=()))+((()!=[])+({}!=()))+(({}<{})+(()<=())))<<((([]<())+({}!=())+([]==[]))))+((({}<{})+({}<=[])))),((((({}=={})+(()==()))+(({}<=())+([]!=()))+(({}<[])+(()<{})))<<((({}!=())+([]!=[]))))),(((((((((((()==())*(()!={})))<<((({}!=())+(()==())+(()==()))))+((({}<={})-([]==())))))))))),((((((((()<{})+([]!=())))<<(((()<=())+({}>={}))+(([]<=[])+(()>={}))))-((({}<=())*([]<())))))<<((({}<=[])+([]>={})+(()!={}))))-((({}!=())+({}<={})+([]<=[])))),(((((((((({}<=())+(()!=[])+([]<())))<<((({}>={})+([]>=[]))))-((([]>={})-(()<{})))))))<<((({}<=[])+({}=={}))))),(((((()!=[])+([]>=[])+([]<=()))+((()!={})+({}=={})+(()>={}))+((()>={})*(()!={})))<<((([]!={})+(()>=[]))+(({}<=[])+(()>={}))))),(((((((({}!=())+([]<{})))<<((([]!=())+({}!=()))+(({}>={})+({}!=()))))-((([]<=())*(()==())))))<<((({}<[])+({}<={}))))+((([]==[])*({}!=())))),(((((()==())+(()<=()))+(([]<=[])+(()==()))+(({}<())*({}<=())))<<((({}<=[])+({}=={})+(()>{}))))),((((({}<())+([]<=[])+([]>={})))<<((({}!=[])+({}!=()))+(({}<[])+([]==[]))))),(((((((((({}<=[])+(()>[])+([]<=())))<<((({}<[])+(()!={}))))-(((()>=[])+([]<[])))))))<<((({}>={})+({}<=()))))),(((((()>{})+([]<=[])+([]==[])))<<((([]<=[])+(()!={}))+(([]>{})+({}!=[]))))),((((([]<=())+(()>=()))+(([]>=[])+({}!=[]))+(({}=={})-({}>=[])))<<((({}=={})+(()!=[])+(()>=[]))))+((([]<=())*(()<=())))),((((([]<())+([]<()))+(([]==[])+({}>={}))+((()!={})-({}<{})))<<(((()<=())+([]>[]))))),(((((((((({}<=[])+([]>=[])+([]<())))<<(((()>=[])+(()>[]))))+(((()>[])*([]!=())))))))<<((({}<=[])+(()>{})+({}<={}))))-(((([]==[])*(()>{})))<<((({}!=())*(()>[]))))),((((({}<=[])+({}<())+({}<[]))+((()>=[])+(()!=[])+({}>={}))+(([]!=[])+(()>[])))<<(((()<=())+({}!=()))+(([]==[])+({}>={}))))-(((()<={})+({}<[])))),(((((()>={})+([]==[])+({}<()))+(([]==[])+({}<={})+([]!={}))+((()!=[])-({}>=())))<<(((()>{})+(()<=()))+((()>=())+({}!=()))))+(((([]>=[])-(()>())))<<((([]<{})+({}<=[]))))),(((((()<=())*({}=={})))<<((([]<=[])+(()>[]))+((()==())+(()<=()))+(({}<=[])*(()>=[]))))),((((({}!=[])+({}>={})+(()==())))<<((({}<=())+([]<()))+((()<=())+(()<=()))+(({}>[])+({}!=[]))))-((([]>={})-([]>=())))),(((((()>=())+({}!=())+({}<={})))<<(((()>=())+([]<=[]))+(({}>={})+(()!=[]))+((()>=())-([]==()))))+((((()==())-(()<=[])))<<(((()==[])+({}!=[]))))),((((((((()>[])+({}!=())+(()<=()))+(([]<=[])+({}<())+(()!={}))+((()>=())+(()=={})))<<((({}!=[])+([]>{}))))-(((()!=[])*(()!={})))))<<(((()>{})+([]<()))))),(((((((((([]!=())+([]>={})+({}<[])))<<(((()<=())+({}=={}))))+(((()!=[])*(()>=[])))))))<<(((()>[])+(()>=[])+([]<=[]))))+((({}<={})*({}<())))),((((((((()!=[])+(()<={})))<<((({}=={})+({}!=()))+((()<=())+([]<()))))-(((()!=())+(()>=[])))))<<(((()>{})+({}<=())+({}>={}))))+((((()>{})*({}!=[])))<<(((()>{})+([]==()))))),(((((()!=[])+({}!={})))<<(((()>[])+({}!=[]))+((()<=())+(()!={}))+((()!=[])*(()>[]))))),((((((((((()==())+(()!=[])+(()==())))<<((({}<={})+([]<=()))))+(((()>=[])*(()==())))))))<<(((()>={})+([]>={})+([]!={}))))+((({}!=[])*(()==())))),((((({}<())+(()>={})+({}<[]))+((()!=[])+(()>={})+(()>=[]))+(({}<=[])-(()<[])))<<((([]>={})+({}!=[]))+(([]>{})+([]!=()))))-(((({}>[])+({}>={})))<<((({}!={})+([]<()))))),((((({}<=())+({}>())))<<((({}<[])+([]==[]))+(({}!=[])+([]<=[]))+(({}<=())*([]!={}))))),((((([]!=())+(()>=())+([]>={}))+(({}<())+([]<=[])+([]<()))+(({}<())*(()>[])))<<((({}<=[])+(()>[]))+((()<=())+([]!={}))))+(((({}!={})+([]==[])))<<((({}>{})+({}<={}))))),((((({}<=[])+({}!=[])+(()>=[])))<<(((()==())+([]<=()))+((()>=[])+({}=={}))+(([]!=[])+(()==()))))+(((()!={})+([]>[])))),(((((()>{})+([]<=[])+(()>[]))+((()>=())+(()>=())+(()==()))+(({}==[])+(()!=[])))<<((({}<=[])+({}=={}))+((()!=[])+([]<()))))-(((({}<[])*({}<={})))<<(((()<=())-({}!={}))))),(((((((((({}=={})+(()>=[])+({}!=())))<<((({}<=[])+(()==()))))+((([]!=())-(()<())))))))<<((({}!=[])+([]==[])+({}!=[]))))-(((()==())+([]=={})))),(((((((([]>=[])+([]<())+(()!={})))<<((({}<())+({}<[])+([]!={}))))+((({}=={})+([]>=())))))<<((({}<=())+([]<=[]))))+((([]>())+(()>{})))),((((([]<=[])+([]!={}))+((()<=())+([]>=[]))+(([]>())+(()!={})))<<((([]<=[])+([]>{})+([]<()))))),(((((((({}<())+(()>={})+([]>{}))+(([]<=[])+(()>=())+(()!=[]))+((()<=())*({}<=[])))<<(((()>={})+({}<=()))))-((([]>())+([]!={})))))<<((([]!=())+({}<=[]))))),(((((((([]!={})+([]<=())+({}>={})))<<(((()>[])+([]>{})+([]<()))))+((({}<{})+(()>[])))))<<((({}>={})+([]==[]))))+((({}<())*([]>=[])))),((((([]==[])+({}<())+([]<=()))+((()>=())+({}=={})+(()<=()))+(({}==())+({}<[])))<<((({}!=())+([]!={}))+(([]<=[])+([]!=()))))-(((([]<())-({}>=[])))<<((({}>{})+(()<=()))))),((((([]>{})+(()!={}))+(([]!=())+({}>={}))+(({}<={})*([]<())))<<((([]>=[])+(()!={})+(()>={}))))),((((([]<())+({}<={}))+(({}<[])+({}<()))+(([]!={})-(()=={})))<<((([]!={})+(()>={}))+((()!={})+([]>{}))))-((([]!=())*({}<=[])))),(((((()>={})+({}>={})+(()<=()))+((()!={})+({}<=())+(()==()))+((()>=[])*({}=={})))<<((({}!=())+([]>{}))+((()!=[])+(()!=[]))))-((({}<[])-([]>[])))),(((((()==())+(()>=[]))+(({}>={})+([]>=[]))+((()<=())-(()<={})))<<(((()!=[])+({}!=()))+(({}<={})+({}=={}))))-(((()==())-([]>[])))),((((({}!=())+(()>[])+({}=={})))<<(((()!=[])+(()<=()))+(({}!=[])+([]>=[]))+((()>=[])+([]=={}))))-(((()<=())*({}>={})))),(((((()>{})+([]>={}))+(({}<=[])+(()>[]))+(([]=={})+(()<=())))<<((({}!=())+([]!={})+([]!=()))))+(((()<=())+({}>=())))),((((({}!=())+({}!=[]))+(({}!=())+([]>={}))+((()<=())+(()<())))<<(((()>=[])+([]!={})+({}<()))))+((([]!=[])+([]<=[])))),((((([]==[])+([]!={})+({}<[]))+(([]<=())+(()!={})+(()>{}))+(([]>={})+([]>[])))<<((({}<={})+([]<())+({}!=[]))))+((((()>=[])*(()<=())))<<(((()>[])-(()>()))))),((((({}<=[])+(()<=()))+((()!={})+({}<()))+((()<=())-([]>())))<<((([]<={})+({}<[]))))),((((((((((([]==[])*([]>{})))<<((({}>={})+([]<())+(()!={}))))+((([]>=[])*(()!={})))))))))),(((((((({}!=())+({}!=())+({}=={}))+(({}<=[])+({}=={})+([]!=()))+(([]>={})-({}>())))<<(((()>=())+({}!=()))))-(((()!={})+({}!={})))))<<((([]>=[])+({}<=()))))),((((((((()<={})+(()<=())))<<((([]!=())+([]<=[]))+((()>=[])+(()>=[]))))-(((()>{})*(()!={})))))<<((([]!=())+([]<())+(()==()))))),(((((((([]<())+(()>=[])+([]<=[])))<<((([]<=())+(()>{})+({}<={}))))-((([]>{})*({}=={})))))<<((({}<[])-([]=={}))))),((((([]>{})+([]>={})+({}!=[])))<<((([]<=())+(()!={}))+(({}!=())+(()!={}))+((()>[])*([]>=[]))))+((([]>=[])+([]<={})))),((((({}!=())+(()<=())+([]<=[]))+((()>=())+([]!={})+(()!={}))+((()<{})+({}>={})))<<(((()<=())+([]<=()))+(({}!=())+([]>=[]))))),(((((()>={})+(()>[])+(()!=[]))+(({}<[])+({}!=[])+({}=={}))+((()!={})-([]=={})))<<(((()>[])+([]==[]))+((()<=())+({}<()))))),((((((((()!={})+(()>=())+({}<[])))<<(((()>={})+([]<=[])+(()>={}))))+((({}=={})+(()>())))))<<((({}<=())+({}<={}))))+((({}>={})*(()>={})))),((((([]==[])+(()!=[])+({}<()))+(([]>=[])+(()!={})+({}>={}))+((()>[])-({}<{})))<<((([]!={})+(()>=[]))+(({}!=())+(()>[]))))-((((()==())*({}<=[])))<<(((()>{})+({}<{}))))),(((((((([]>{})+(()>{})+({}!=[])))<<((([]>={})+({}<={})+([]!={}))))+(((()!={})+([]<[])))))<<(((()>[])+(()>{}))))),(((((()>=())+(()>{}))+((()>=[])+([]<()))+((()!=())+(()!=[])))<<(((()>[])+([]<=[])+([]>=[]))))),((((({}<())+([]<=()))+(({}<())+({}<=()))+((()<=())+({}>())))<<((({}>={})+([]>={}))+((()!={})+({}!=()))))-(((()>={})+({}>())))),(((((()==())+({}<[])+([]<=[]))+(({}<[])+({}!=())+(()<=()))+(({}!=())*(()<=())))<<((([]!=())+([]>={}))+(({}!=())+([]>={}))))-(((()>{})+([]=={})))),(((((()!=[])+({}=={}))+(([]>={})+([]!={}))+(([]!={})+({}>())))<<((([]<())+(()>=[]))+(([]!={})+(()>=()))))-((({}<[])*({}<())))),(((((()>{})+({}<[])+([]!=())))<<(((()<=())+([]<=[]))+((()>={})+(()>{}))+(([]==[])+([]>()))))-(((()=={})+(()!=[])))),((((((((()>=())+(()<=())+({}<[])))<<((([]<=[])+([]<())+(()!=[]))))-((({}!=())-(()==[])))))<<((([]>={})+([]>=[]))))-((([]!={})+({}<{})))),((((((((()>={})*({}=={})))<<((({}<=[])+(()>{}))+(([]<=[])+(()==()))))-((({}!={})+([]<())))))<<((([]>={})+(()>={})+({}<=()))))-(((()<=())+(()>{})+(()==())))),(((((((([]==[])+({}>={})+(()<=())))<<((([]<=())+(()!={})+([]>={}))))-((([]<=())+(()!=())))))<<(((()==())+([]!=()))))+((([]>())+([]<=[])))),(((((()<=())+(()<())))<<(((()!={})+([]>=[]))+(({}<[])+(()!={}))+(([]<[])+(()>[]))))),(((((((((([]<=[])+({}!=[])+({}>={})))<<((([]!={})+({}!=[]))))-((({}>=())+(()<=())))))))<<((({}<())+([]>{}))))-((({}<[])-(()<=[])))),((((({}>={})*({}=={})))<<((([]>=[])+(()!=[]))+(({}!=())+({}<={}))+(({}<())+({}==[]))))),(((((((([]==())+({}<={})))<<((({}=={})+([]==[]))+(({}=={})+(()<=()))))-(((()>[])+([]!=[])))))<<((({}<())+([]>=[])+({}=={}))))-(((([]>={})-([]<={})))<<((({}==())+([]!={}))))),((((((((()>=[])+([]<=[])+({}<={})))<<((([]>=[])+(()>[])+([]>={}))))-((([]=={})+(()>{})))))<<((({}!=())+({}<=[]))))-((([]>={})+(()<{})))),(((((()==())+(()==())+({}<=()))+(({}<={})+(()>=())+({}!=[]))+((()<{})+({}<={})))<<((({}>={})+(()>={}))+(([]>{})+([]>{}))))),(((((((({}<())+([]>={})+(()<=())))<<(((()>=())+({}=={})+(()!=[]))))-(((()>={})+({}==())))))<<((({}=={})+([]<()))))+(((()>=())-(()<={})))),((((({}<())+({}<=()))+(({}=={})+([]>={}))+(({}<())+({}>[])))<<((({}!=[])+(()==())+(()>={}))))+(((()!=[])-([]>=())))),((((([]<())+({}!=()))+(({}<[])+([]==[]))+(([]<=())*({}!=[])))<<((([]>=[])-(()<=[]))))),((((((((((({}==())+([]>=[])))<<((([]>{})+({}!=[])+(()<=()))))+(((()>={})*({}=={})))))))))),(((((((({}>[])+(()!={})))<<((({}!=())+(()==()))+(({}!=[])+(()==()))))-((({}<=[])*([]!=())))))<<((({}!=())+({}>={})+({}<=()))))-(((()>=[])+([]==[])+(()>=())))),((((([]>())+({}<=())))<<((([]<=[])+(()>=()))+(({}!=[])+(()>[]))+(({}>[])+({}=={}))))),(((((((((({}<={})+([]!=())+(()>{})))<<((([]==[])+(()!={}))))-(((()!={})+([]<[])))))))<<(((()>{})+(()<=()))))-((([]<{})+(()>=())))),(((((((({}!=())+(()!=())))<<((({}<={})+([]<=()))+(([]==[])+([]<=[]))))-(((()!={})+({}>())))))<<((([]<=())+({}!=()))))+((({}==())+({}!=())))),((((([]<=[])-(()<())))<<((({}!=[])+({}<=[]))+((()>=[])+([]<=()))+(({}>={})+([]<[]))))),(((((()==())+({}!=())+({}<=[])))<<((([]>={})+([]!={}))+(({}!=())+(()>={}))))+((([]<{})+(()>[])))),((((([]<())+({}!=[]))+(({}>={})+([]<=[]))+(([]<())+({}>=[])))<<((([]!=())-([]>()))))),(((((((((((()>{})+([]==())))<<((({}>={})+([]>={})+(()>{}))))+((([]>[])+({}<={})))))))))),((((([]<=[])+([]<=())+([]>={}))+(([]<())+([]<())+(()>={}))+(({}==[])+([]>=[])))<<((([]<=())+([]==[]))+((()!={})+({}<[]))))),(((((()>=[])-(()<=[])))<<((([]>{})+([]>=[]))+(([]<=[])+([]<()))+(([]==())+({}=={}))))),(((((((((([]!={})+([]<=())+(()!=[])))<<(((()>=())+([]>=[]))))-((([]<[])+({}<())))))))<<((([]!=())+(()>=()))))-((({}<[])+([]==())))),((((((((()>())+(()<=())))<<((([]!=())+(()>={}))+(({}=={})+({}<()))))-((({}==[])+({}>={})))))<<(((()>={})+({}>={}))))+((([]<())*([]==[])))),((((([]>())+([]<=[])))<<((({}<[])+(()>={}))+(({}<={})+([]==[]))+(([]<=())+(()<=[]))))),((((({}!=())+({}!=())+({}!=())))<<((([]>{})+(()!={}))+(([]>{})+({}!=[]))))+(((()<={})+(()==()))))]))\nexec x("".join([chr(i) for i in lx]).decode("hex"))')
        na.close()
        py_compile.compile(js)
        os.system('rm ' + js)
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def c5():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 5 ]')
        file = input('[?] File:')
        bc = open(file).read()
        js = file.replace('.py', '_encoded.py')
        a = []
        b = []
        bin = ''
        xh = compile(bc, '[Axeyed]', 'exec')
        pg = marshal.dumps(xh)
        bin += binascii.hexlify(pg)
        for g in bin:
            a.append(ord(g) - 9)
        for lx in range(len(a)):
            b.append(randint(1, 120))
        c = []
        d = 0
        for x in b:
            c.append(9 * b[d])
        d += 1
        x_x = lambda : randint(1, 255)
        xz = []
        for asx in range(255):
            xz.append(x_x())
        na = open(js, 'w')
        na.write('z = ' + str(xz) + '\n')
        na.write('_ = ' + str(b) + '\n__ = ' + str(c) + '\nOoO_ = ' + str(a) + '\nimport marshal\nOO = lambda _ : marshal.loads(_)\nu = ( ( { } < ( ) ) - ( { } < ( ) ) )\np = (({}<())-({}<()))\nv = []\nexec((lambda:((()>())+(()<()))).func_code.co_lnotab).join(map(chr,[(((((((({}=={})+([]>={})+({}<[]))+(({}<[])+({}<[])+({}!=[]))+((()>{})*([]<=())))<<((({}>={})+(()>{}))))-((({}<=[])+({}>{})))))<<((({}<[])+(()==()))))),((((((((()==())*(()<=())))<<((([]>=[])+({}=={}))+((()==())+(()>={}))))-((([]>={})*({}!=[])))))<<((({}=={})+({}<[])+(()!={}))))),((((([]==())+([]!={})))<<((({}<[])+({}<[]))+((()>=[])+({}<()))+(({}!=[])+(()<=[]))))),(((((((({}>=())+({}!=())))<<(((()>{})+([]<=()))+(({}!=())+({}<=()))))-((([]==())+({}<={})))))<<((([]>={})+({}<=[]))))+((([]==[])+({}==())))),((((({}>={})-(()!=())))<<(((()>=())+({}<=[]))+((()>{})+([]>{}))+((()==())-([]<{}))))),(((((((([]==[])+(()>{})+(()>{})))<<(((()>[])+(()>={})+([]>=[]))))-(((()!={})+({}<{})))))<<((({}!=[])+({}>={}))))-((({}<())*([]==[])))),((((((((()==())+({}!=[])+({}<[])))<<(((()<=())+({}<[])+({}>={}))))-((({}<=[])+({}!={})))))<<((([]!={})+({}=={}))))+((([]<())-({}>[])))),((((({}>={})+([]<()))+((()!=[])+(()!={}))+(({}!=[])*({}<())))<<(((()>={})+([]>()))))),(((((((((({}<=())+({}!=())+({}<[])))<<((({}=={})+([]!={}))))+(((()<=())-([]<{})))))))<<((({}<())+({}<[])+(()>={}))))-((((()!=())+(()>[])))<<(((()<[])+(()>={}))))),(((((()!=[])+(()>={})+(()>=[]))+(({}<[])+([]<=())+(()==()))+(({}==())+(()!=[])))<<((({}!=())+([]!=()))+(({}<())+({}>={}))))-((({}<={})-(()<{})))),((((([]>={})+([]!={})+([]>={}))+((()<=())+([]>={})+(()!=[]))+((()!={})+([]<={})))<<((([]!=())+({}<[]))+(({}<())+({}!=[]))))+(((({}>={})+([]<[])))<<((({}<[])+(()<={}))))),(((((()>=())+(()<())))<<((([]!=())+({}<={}))+((()>=[])+({}<[]))+((()!=[])+(()!=()))))),((((({}<[])+([]==[])+([]>{})))<<((([]>{})+([]!={}))+((()>=())+({}<=[]))+(([]<{})+({}=={}))))-(((()>=[])*(()!={})))),((((((((()>{})+(()!=())))<<((([]>=[])+(()>=()))+(({}<={})+([]>{}))))+((([]!=())*([]!={})))))<<(((()!=[])+(()!=[]))))-((([]>=())+(()>{})))),(((((()>[])+({}<=[])+(()>={}))+((()!=[])+({}=={})+({}!=()))+((()<{})+({}!=())))<<((({}<[])+({}!=()))+(([]>={})+(()>=()))))-((({}==[])+([]<())))),((((([]<())+({}>={})+({}<[]))+((()>{})+({}<[])+(()>={}))+((()==())+({}>[])))<<((({}!=[])+(()>{}))+(({}>={})+(()<=()))))-(((({}>={})*([]>{})))<<((([]>={})-({}>=()))))),((((([]<=[])+(()!={})+({}<[])))<<((({}>={})+([]<=[]))+((()!=[])+([]>={}))+(({}<())+([]<[]))))-((([]==())+(()!=[])))),(((((((((([]==[])+({}!=[])+({}<[])))<<(((()>=[])+({}<=()))))-(((()==())*(()<=())))))))<<((([]>={})+(()>=[])+({}!=()))))-(((([]>=[])+([]<={})))<<(((()!=[])*({}!=[]))))),(((((()!=[])+({}>={})+([]!=())))<<((([]<=())+([]!={}))+(({}<=[])+([]>{}))+((()>[])+({}<{}))))+((({}>={})+({}==[])))),(((((()>=[])+([]>{})+(()>=[]))+((()!=[])+(()>[])+([]>=[]))+(({}<[])+([]!=[])))<<((([]<=())+(()>={}))+((()!={})+({}>={}))))+((((()!=[])+(()>())))<<((({}<={})*({}<()))))),(((((()>={})+(()>=())+([]!=()))+(([]>=[])+(()>=())+([]>{}))+(([]!=())-(()>())))<<((({}>={})+([]<()))+(([]!=())+({}<[]))))-(((([]!=[])+([]!=())))<<((({}!=())+(()>()))))),((((({}>={})+([]<())+({}<[])))<<((([]>={})+(()==()))+((()!={})+({}!=[]))+((()==())-(()<{}))))+((({}=={})-([]<={})))),(((((((([]==[])+([]<=())+(()!={}))+(([]!=())+({}<=())+({}=={}))+((()!={})*({}!=[])))<<(((()>=[])+([]>={}))))-((({}<())-([]!=[])))))<<((([]!=())+([]<=()))))+((({}>={})*(()>=[])))),(((((((({}<=[])+([]==[])+({}<=[])))<<((([]>=[])+({}<={})+(()>={}))))+((({}<=())-({}>=[])))))<<((({}<())+({}<={}))))+((([]!={})*(()>=[])))),((((({}<())+([]>{})+([]!=()))+(({}!=[])+([]<=())+([]<=()))+(([]<=[])*([]<=())))<<(((()<=())+(()>=[]))+(([]<())+(()==()))))+((([]!={})+([]!=())+({}<())))),(((((()==())*({}<=[])))<<((({}=={})+([]>{}))+((()>=())+([]!={}))+(([]>{})-({}>=[]))))),(((((((((({}!=[])+([]<=[])+({}<=[])))<<((({}<={})+({}<[]))))+(((()>[])*(()!={})))))))<<((({}<())+({}=={})+([]!=()))))+(((()>=())-(()==[])))),((((({}<=[])+({}<[])+({}=={}))+(([]>={})+({}<())+(()!={}))+((()>[])*({}>={})))<<((({}<[])+(()>=()))+((()>={})+({}>={}))))-(((([]>[])+({}=={})))<<(((()>={})-(()==[]))))),(((((()!=[])*(()>[])))<<((({}<=())+(()>=[]))+(([]<=[])+(()!=[]))+(({}<=())+(()==[]))))),((((([]>=[])+({}!=())+(()>=()))+(([]<=())+({}!=())+({}>={}))+((()!=())+([]>=[])))<<(((()==())+(()>[]))+((()==())+([]!=()))))+(((([]>=[])-({}==())))<<(((()!=())+(()>=[]))))),((((([]!={})+([]>={})+({}<=())))<<(((()==())+({}<[]))+(({}<())+([]<=()))+(({}!=[])*({}=={}))))+((([]<=[])+({}!={})))),((((({}<())+({}<())+([]!=()))+(({}<[])+({}!=())+({}<()))+(({}!={})+({}!=())))<<((([]>{})+({}=={}))+(({}<=())+([]<()))))-(((({}==[])+([]>={})))<<(((()<=())+(()<={}))))),(((((((((([]<=())+([]<=())+([]!=())))<<(((()!=[])+([]<=[]))))+((({}<[])-([]==())))))))<<((([]<())+(()==())+({}!=()))))-((([]>=[])-([]==())))),(((((((({}!=())+(()!={})+([]>=[])))<<(((()!={})+(()<=())+({}<={}))))+((({}=={})-(()<=[])))))<<((({}!=())+(()==()))))+((([]==[])+([]==())))),((((([]<=())+([]<=()))+(({}=={})+([]>=[]))+(([]<{})+(()!={})))<<(((()>=())+({}!=[])+({}!=[]))))),((((((((()==())+(()>=[])+(()!={}))+((()==())+([]>={})+({}<[]))+(([]<())*([]>=[])))<<((({}=={})+({}!=()))))-((([]<=())-({}>{})))))<<(((()>=[])+([]>{}))))),((((((((()>[])+({}>={})+({}>={})))<<(((()<=())+(()>[])+(()>={}))))+((([]>())+({}<=())))))<<((({}=={})+([]>={}))))+(((()!=[])*([]>{})))),((((({}!=[])+([]<=[])+(()>=()))+(({}<[])+([]==[])+(()>=[]))+(([]<())*([]==[])))<<((({}=={})+({}<()))+(({}>={})+([]<=()))))-((((()>{})-(()!=())))<<((([]<[])+([]!=()))))),(((((()>={})+([]==[]))+((()!={})+(()<=()))+(([]>={})-({}>=())))<<(((()>={})+({}<())+({}!=[]))))),(((((()>=())+(()>=[])+({}<[])))<<((([]!=())+(()>[]))+((()<=())+({}<()))+((()==[])+([]<=()))))-((([]<=[])+({}>=())))),((((({}!=[])+([]>={})+([]==[])))<<(((()!={})+([]<=()))+(([]!={})+(()>={}))+(({}!={})+({}!=()))))-((([]<=())*(()!={})))),(((((()>{})+(()>=()))+(([]!=())+({}=={}))+((()<={})+([]<=[])))<<((({}<[])+({}<=[])+(()>=()))))+((({}>={})*({}<())))),((((([]==[])+(()!={}))+((()!={})+(()<=()))+((()!={})+([]<[])))<<((([]!=())+(()>=())+({}>={}))))+((({}<=())+([]>=())))),(((((()==())+([]>{})+([]>={}))+((()<=())+([]>={})+(()!=[]))+((()==())-([]==())))<<((({}>={})+([]>={})+([]<()))))+(((([]<=[])*([]>={})))<<(((()<=())+({}==[]))))),((((({}!=[])+({}<()))+((()!=[])+([]<()))+(([]<())-(()<[])))<<((({}<=[])-(()!=()))))),(((((((((((()=={})+(()>={})))<<(((()>=())+(()==())+([]<=()))))+((({}<=[])*({}<={})))))))))),((((((((()>{})+({}>=())))<<((([]!=())+(()!=[]))+(({}>={})+({}<={}))))-((({}>=())+(()>=[])))))<<(((()>=[])+([]!={})+([]<=()))))-((((()>[])*([]!={})))<<((({}!=[])+([]>()))))),(((((((({}<())+([]>{})+(()>={})))<<((({}=={})+(()!=[])+([]!=()))))-(((()!=[])*(()!={})))))<<((([]>={})*({}=={}))))),((((([]>=[])+([]>=[])+({}<())))<<(((()>=())+(()>=()))+((()>[])+({}>={}))+(({}<=[])-({}==[]))))+((({}=={})*([]!={})))),((((([]!={})+([]<=())+({}<()))+(({}<=[])+({}>={})+(()==()))+(([]==[])-(()=={})))<<((({}<())+([]<=[]))+((()>{})+(()>={}))))),((((({}<={})+([]>{})+(()>=[]))+((()!={})+({}<[])+({}<=()))+(({}!=())*([]==[])))<<((([]<=())+([]>=[]))+(([]!=())+(()>=()))))),((((((((()>=[])+(()>=())+(()>=[])))<<(((()>={})+(()>={})+([]<=()))))+((([]=={})+({}<[])))))<<((([]>={})+(()>={}))))+((([]<=[])*({}!=[])))),((((([]!={})+(()>=())+({}<={}))+(({}<=())+({}=={})+({}<=[]))+(([]>{})+(()<())))<<(((()>={})+([]>{}))+(({}<=())+(()==()))))-(((({}<[])-([]<={})))<<(((()=={})+([]!={}))))),(((((((({}<[])+(()!=[])+({}<())))<<((({}!=[])+(()!={})+(()<=()))))+((({}<{})+([]==[])))))<<((([]>=[])+(()>[]))))),((((([]>{})+({}!=[]))+(([]==[])+([]<=()))+(([]<())+(()>())))<<((({}=={})+(()!=[])+([]!={}))))),((((({}<())+([]<=[])+([]<=())))<<((({}<=[])+([]<()))+(({}>={})+({}<=()))+(({}<[])-({}<{}))))-((({}!=())*({}<={})))),(((((()>[])+([]<=())+(()>=[])))<<((([]==[])+([]<()))+(([]<=[])+({}<=()))+(({}=={})+([]<={}))))-(((()==())+({}<{})))),(((((((({}<=())+({}<={})+(()>={})))<<((({}!=())+([]!={})+([]>=[]))))-((([]==[])*([]>{})))))<<(((()>=())+([]==[]))))-((([]<=[])+({}>=())))),(((((((([]>={})*(()>=[])))<<((([]<())+(()>[]))+((()!={})+({}<={}))))-((([]!={})+({}>[])))))<<(((()>={})+(()!={})+([]!=()))))-((({}!=())+([]!={})+(()<=())))),((((((((()<=())+([]<=[])+(()==())))<<((([]>={})+([]<=[])+([]>{}))))-((([]>=[])-(()<={})))))<<(((()<=())+([]!={}))))+((([]!=())*(()>=[])))),(((((()<())+({}<={})))<<((({}=={})+([]<=()))+((()<=())+({}<=[]))+(([]==[])-(()<={}))))),((((({}>={})+({}>={})+({}>={})))<<((([]>=[])+(()!=[]))+(([]>={})+([]>{}))))-(((()!={})+([]<[])))),(((((()>={})-([]=={})))<<(((()>={})+([]<()))+(([]!={})+([]>={}))+(({}!=[])-(()!=()))))),((((({}<())+(()>[])+(()>{})))<<((({}<())+([]<=()))+(({}<=())+([]>={}))+(({}!=())+({}>=[]))))-((([]!={})+([]!=[])))),(((((((([]==[])+(()!=[])+({}>={})))<<((({}<={})+(()==())+({}=={}))))-(((()>=())*(()>{})))))<<((({}<=[])+({}>={}))))-((({}<{})+(()>[])))),((((([]>=[])+([]<=())+({}!=()))+(([]<())+({}>={})+([]<=()))+(({}>={})-(()=={})))<<(((()!={})+([]>{}))+((()>=[])+(()!={}))))),(((((((({}<=[])+({}!=[])+({}=={})))<<((([]>{})+(()>=())+({}<={}))))-((({}<())*(()==())))))<<((({}<={})+({}!=()))))+(((()<=())-({}>=())))),((((([]>={})+(()>=()))+((()!=[])+({}!=()))+(({}<{})+(()<=())))<<((([]<())+({}!=())+([]==[]))))+((({}<{})+({}<=[])))),((((({}=={})+(()==()))+(({}<=())+([]!=()))+(({}<[])+(()<{})))<<((({}!=())+([]!=[]))))),(((((((((((()==())*(()!={})))<<((({}!=())+(()==())+(()==()))))+((({}<={})-([]==())))))))))),((((((((()<{})+([]!=())))<<(((()<=())+({}>={}))+(([]<=[])+(()>={}))))-((({}<=())*([]<())))))<<((({}<=[])+([]>={})+(()!={}))))-((({}!=())+({}<={})+([]<=[])))),(((((((((({}<=())+(()!=[])+([]<())))<<((({}>={})+([]>=[]))))-((([]>={})-(()<{})))))))<<((({}<=[])+({}=={}))))),(((((()!=[])+([]>=[])+([]<=()))+((()!={})+({}=={})+(()>={}))+((()>={})*(()!={})))<<((([]!={})+(()>=[]))+(({}<=[])+(()>={}))))),(((((((({}!=())+([]<{})))<<((([]!=())+({}!=()))+(({}>={})+({}!=()))))-((([]<=())*(()==())))))<<((({}<[])+({}<={}))))+((([]==[])*({}!=())))),(((((()==())+(()<=()))+(([]<=[])+(()==()))+(({}<())*({}<=())))<<((({}<=[])+({}=={})+(()>{}))))),((((({}<())+([]<=[])+([]>={})))<<((({}!=[])+({}!=()))+(({}<[])+([]==[]))))),(((((((((({}<=[])+(()>[])+([]<=())))<<((({}<[])+(()!={}))))-(((()>=[])+([]<[])))))))<<((({}>={})+({}<=()))))),(((((()>{})+([]<=[])+([]==[])))<<((([]<=[])+(()!={}))+(([]>{})+({}!=[]))))),((((([]<=())+(()>=()))+(([]>=[])+({}!=[]))+(({}=={})-({}>=[])))<<((({}=={})+(()!=[])+(()>=[]))))+((([]<=())*(()<=())))),((((([]<())+([]<()))+(([]==[])+({}>={}))+((()!={})-({}<{})))<<(((()<=())+([]>[]))))),(((((((((({}<=[])+([]>=[])+([]<())))<<(((()>=[])+(()>[]))))+(((()>[])*([]!=())))))))<<((({}<=[])+(()>{})+({}<={}))))-(((([]==[])*(()>{})))<<((({}!=())*(()>[]))))),((((({}<=[])+({}<())+({}<[]))+((()>=[])+(()!=[])+({}>={}))+(([]!=[])+(()>[])))<<(((()<=())+({}!=()))+(([]==[])+({}>={}))))-(((()<={})+({}<[])))),(((((()>={})+([]==[])+({}<()))+(([]==[])+({}<={})+([]!={}))+((()!=[])-({}>=())))<<(((()>{})+(()<=()))+((()>=())+({}!=()))))+(((([]>=[])-(()>())))<<((([]<{})+({}<=[]))))),(((((()<=())*({}=={})))<<((([]<=[])+(()>[]))+((()==())+(()<=()))+(({}<=[])*(()>=[]))))),((((({}!=[])+({}>={})+(()==())))<<((({}<=())+([]<()))+((()<=())+(()<=()))+(({}>[])+({}!=[]))))-((([]>={})-([]>=())))),(((((()>=())+({}!=())+({}<={})))<<(((()>=())+([]<=[]))+(({}>={})+(()!=[]))+((()>=())-([]==()))))+((((()==())-(()<=[])))<<(((()==[])+({}!=[]))))),((((((((()>[])+({}!=())+(()<=()))+(([]<=[])+({}<())+(()!={}))+((()>=())+(()=={})))<<((({}!=[])+([]>{}))))-(((()!=[])*(()!={})))))<<(((()>{})+([]<()))))),(((((((((([]!=())+([]>={})+({}<[])))<<(((()<=())+({}=={}))))+(((()!=[])*(()>=[])))))))<<(((()>[])+(()>=[])+([]<=[]))))+((({}<={})*({}<())))),((((((((()!=[])+(()<={})))<<((({}=={})+({}!=()))+((()<=())+([]<()))))-(((()!=())+(()>=[])))))<<(((()>{})+({}<=())+({}>={}))))+((((()>{})*({}!=[])))<<(((()>{})+([]==()))))),(((((()!=[])+({}!={})))<<(((()>[])+({}!=[]))+((()<=())+(()!={}))+((()!=[])*(()>[]))))),((((((((((()==())+(()!=[])+(()==())))<<((({}<={})+([]<=()))))+(((()>=[])*(()==())))))))<<(((()>={})+([]>={})+([]!={}))))+((({}!=[])*(()==())))),((((({}<())+(()>={})+({}<[]))+((()!=[])+(()>={})+(()>=[]))+(({}<=[])-(()<[])))<<((([]>={})+({}!=[]))+(([]>{})+([]!=()))))-(((({}>[])+({}>={})))<<((({}!={})+([]<()))))),((((({}<=())+({}>())))<<((({}<[])+([]==[]))+(({}!=[])+([]<=[]))+(({}<=())*([]!={}))))),((((([]!=())+(()>=())+([]>={}))+(({}<())+([]<=[])+([]<()))+(({}<())*(()>[])))<<((({}<=[])+(()>[]))+((()<=())+([]!={}))))+(((({}!={})+([]==[])))<<((({}>{})+({}<={}))))),((((({}<=[])+({}!=[])+(()>=[])))<<(((()==())+([]<=()))+((()>=[])+({}=={}))+(([]!=[])+(()==()))))+(((()!={})+([]>[])))),(((((()>{})+([]<=[])+(()>[]))+((()>=())+(()>=())+(()==()))+(({}==[])+(()!=[])))<<((({}<=[])+({}=={}))+((()!=[])+([]<()))))-(((({}<[])*({}<={})))<<(((()<=())-({}!={}))))),(((((((((({}=={})+(()>=[])+({}!=())))<<((({}<=[])+(()==()))))+((([]!=())-(()<())))))))<<((({}!=[])+([]==[])+({}!=[]))))-(((()==())+([]=={})))),(((((((([]>=[])+([]<())+(()!={})))<<((({}<())+({}<[])+([]!={}))))+((({}=={})+([]>=())))))<<((({}<=())+([]<=[]))))+((([]>())+(()>{})))),((((([]<=[])+([]!={}))+((()<=())+([]>=[]))+(([]>())+(()!={})))<<((([]<=[])+([]>{})+([]<()))))),(((((((({}<())+(()>={})+([]>{}))+(([]<=[])+(()>=())+(()!=[]))+((()<=())*({}<=[])))<<(((()>={})+({}<=()))))-((([]>())+([]!={})))))<<((([]!=())+({}<=[]))))),(((((((([]!={})+([]<=())+({}>={})))<<(((()>[])+([]>{})+([]<()))))+((({}<{})+(()>[])))))<<((({}>={})+([]==[]))))+((({}<())*([]>=[])))),((((([]==[])+({}<())+([]<=()))+((()>=())+({}=={})+(()<=()))+(({}==())+({}<[])))<<((({}!=())+([]!={}))+(([]<=[])+([]!=()))))-(((([]<())-({}>=[])))<<((({}>{})+(()<=()))))),((((([]>{})+(()!={}))+(([]!=())+({}>={}))+(({}<={})*([]<())))<<((([]>=[])+(()!={})+(()>={}))))),((((([]<())+({}<={}))+(({}<[])+({}<()))+(([]!={})-(()=={})))<<((([]!={})+(()>={}))+((()!={})+([]>{}))))-((([]!=())*({}<=[])))),(((((()>={})+({}>={})+(()<=()))+((()!={})+({}<=())+(()==()))+((()>=[])*({}=={})))<<((({}!=())+([]>{}))+((()!=[])+(()!=[]))))-((({}<[])-([]>[])))),(((((()==())+(()>=[]))+(({}>={})+([]>=[]))+((()<=())-(()<={})))<<(((()!=[])+({}!=()))+(({}<={})+({}=={}))))-(((()==())-([]>[])))),((((({}!=())+(()>[])+({}=={})))<<(((()!=[])+(()<=()))+(({}!=[])+([]>=[]))+((()>=[])+([]=={}))))-(((()<=())*({}>={})))),(((((()>{})+([]>={}))+(({}<=[])+(()>[]))+(([]=={})+(()<=())))<<((({}!=())+([]!={})+([]!=()))))+(((()<=())+({}>=())))),((((({}!=())+({}!=[]))+(({}!=())+([]>={}))+((()<=())+(()<())))<<(((()>=[])+([]!={})+({}<()))))+((([]!=[])+([]<=[])))),((((([]==[])+([]!={})+({}<[]))+(([]<=())+(()!={})+(()>{}))+(([]>={})+([]>[])))<<((({}<={})+([]<())+({}!=[]))))+((((()>=[])*(()<=())))<<(((()>[])-(()>()))))),((((({}<=[])+(()<=()))+((()!={})+({}<()))+((()<=())-([]>())))<<((([]<={})+({}<[]))))),((((((((((([]==[])*([]>{})))<<((({}>={})+([]<())+(()!={}))))+((([]>=[])*(()!={})))))))))),(((((((({}!=())+({}!=())+({}=={}))+(({}<=[])+({}=={})+([]!=()))+(([]>={})-({}>())))<<(((()>=())+({}!=()))))-(((()!={})+({}!={})))))<<((([]>=[])+({}<=()))))),((((((((()<={})+(()<=())))<<((([]!=())+([]<=[]))+((()>=[])+(()>=[]))))-(((()>{})*(()!={})))))<<((([]!=())+([]<())+(()==()))))),(((((((([]<())+(()>=[])+([]<=[])))<<((([]<=())+(()>{})+({}<={}))))-((([]>{})*({}=={})))))<<((({}<[])-([]=={}))))),((((([]>{})+([]>={})+({}!=[])))<<((([]<=())+(()!={}))+(({}!=())+(()!={}))+((()>[])*([]>=[]))))+((([]>=[])+([]<={})))),((((({}!=())+(()<=())+([]<=[]))+((()>=())+([]!={})+(()!={}))+((()<{})+({}>={})))<<(((()<=())+([]<=()))+(({}!=())+([]>=[]))))),(((((()>={})+(()>[])+(()!=[]))+(({}<[])+({}!=[])+({}=={}))+((()!={})-([]=={})))<<(((()>[])+([]==[]))+((()<=())+({}<()))))),((((((((()!={})+(()>=())+({}<[])))<<(((()>={})+([]<=[])+(()>={}))))+((({}=={})+(()>())))))<<((({}<=())+({}<={}))))+((({}>={})*(()>={})))),((((([]==[])+(()!=[])+({}<()))+(([]>=[])+(()!={})+({}>={}))+((()>[])-({}<{})))<<((([]!={})+(()>=[]))+(({}!=())+(()>[]))))-((((()==())*({}<=[])))<<(((()>{})+({}<{}))))),(((((((([]>{})+(()>{})+({}!=[])))<<((([]>={})+({}<={})+([]!={}))))+(((()!={})+([]<[])))))<<(((()>[])+(()>{}))))),(((((()>=())+(()>{}))+((()>=[])+([]<()))+((()!=())+(()!=[])))<<(((()>[])+([]<=[])+([]>=[]))))),((((({}<())+([]<=()))+(({}<())+({}<=()))+((()<=())+({}>())))<<((({}>={})+([]>={}))+((()!={})+({}!=()))))-(((()>={})+({}>())))),(((((()==())+({}<[])+([]<=[]))+(({}<[])+({}!=())+(()<=()))+(({}!=())*(()<=())))<<((([]!=())+([]>={}))+(({}!=())+([]>={}))))-(((()>{})+([]=={})))),(((((()!=[])+({}=={}))+(([]>={})+([]!={}))+(([]!={})+({}>())))<<((([]<())+(()>=[]))+(([]!={})+(()>=()))))-((({}<[])*({}<())))),(((((()>{})+({}<[])+([]!=())))<<(((()<=())+([]<=[]))+((()>={})+(()>{}))+(([]==[])+([]>()))))-(((()=={})+(()!=[])))),((((((((()>=())+(()<=())+({}<[])))<<((([]<=[])+([]<())+(()!=[]))))-((({}!=())-(()==[])))))<<((([]>={})+([]>=[]))))-((([]!={})+({}<{})))),((((((((()>={})*({}=={})))<<((({}<=[])+(()>{}))+(([]<=[])+(()==()))))-((({}!={})+([]<())))))<<((([]>={})+(()>={})+({}<=()))))-(((()<=())+(()>{})+(()==())))),(((((((([]==[])+({}>={})+(()<=())))<<((([]<=())+(()!={})+([]>={}))))-((([]<=())+(()!=())))))<<(((()==())+([]!=()))))+((([]>())+([]<=[])))),(((((()<=())+(()<())))<<(((()!={})+([]>=[]))+(({}<[])+(()!={}))+(([]<[])+(()>[]))))),(((((((((([]<=[])+({}!=[])+({}>={})))<<((([]!={})+({}!=[]))))-((({}>=())+(()<=())))))))<<((({}<())+([]>{}))))-((({}<[])-(()<=[])))),((((({}>={})*({}=={})))<<((([]>=[])+(()!=[]))+(({}!=())+({}<={}))+(({}<())+({}==[]))))),(((((((([]==())+({}<={})))<<((({}=={})+([]==[]))+(({}=={})+(()<=()))))-(((()>[])+([]!=[])))))<<((({}<())+([]>=[])+({}=={}))))-(((([]>={})-([]<={})))<<((({}==())+([]!={}))))),((((((((()>=[])+([]<=[])+({}<={})))<<((([]>=[])+(()>[])+([]>={}))))-((([]=={})+(()>{})))))<<((({}!=())+({}<=[]))))-((([]>={})+(()<{})))),(((((()==())+(()==())+({}<=()))+(({}<={})+(()>=())+({}!=[]))+((()<{})+({}<={})))<<((({}>={})+(()>={}))+(([]>{})+([]>{}))))),(((((((({}<())+([]>={})+(()<=())))<<(((()>=())+({}=={})+(()!=[]))))-(((()>={})+({}==())))))<<((({}=={})+([]<()))))+(((()>=())-(()<={})))),((((({}<())+({}<=()))+(({}=={})+([]>={}))+(({}<())+({}>[])))<<((({}!=[])+(()==())+(()>={}))))+(((()!=[])-([]>=())))),((((([]<())+({}!=()))+(({}<[])+([]==[]))+(([]<=())*({}!=[])))<<((([]>=[])-(()<=[]))))),((((((((((({}==())+([]>=[])))<<((([]>{})+({}!=[])+(()<=()))))+(((()>={})*({}=={})))))))))),(((((((({}>[])+(()!={})))<<((({}!=())+(()==()))+(({}!=[])+(()==()))))-((({}<=[])*([]!=())))))<<((({}!=())+({}>={})+({}<=()))))-(((()>=[])+([]==[])+(()>=())))),((((([]>())+({}<=())))<<((([]<=[])+(()>=()))+(({}!=[])+(()>[]))+(({}>[])+({}=={}))))),(((((((((({}<={})+([]!=())+(()>{})))<<((([]==[])+(()!={}))))-(((()!={})+([]<[])))))))<<(((()>{})+(()<=()))))-((([]<{})+(()>=())))),(((((((({}!=())+(()!=())))<<((({}<={})+([]<=()))+(([]==[])+([]<=[]))))-(((()!={})+({}>())))))<<((([]<=())+({}!=()))))+((({}==())+({}!=())))),((((([]<=[])-(()<())))<<((({}!=[])+({}<=[]))+((()>=[])+([]<=()))+(({}>={})+([]<[]))))),(((((()==())+({}!=())+({}<=[])))<<((([]>={})+([]!={}))+(({}!=())+(()>={}))))+((([]<{})+(()>[])))),((((([]<())+({}!=[]))+(({}>={})+([]<=[]))+(([]<())+({}>=[])))<<((([]!=())-([]>()))))),(((((((((((()>{})+([]==())))<<((({}>={})+([]>={})+(()>{}))))+((([]>[])+({}<={})))))))))),((((([]<=[])+([]<=())+([]>={}))+(([]<())+([]<())+(()>={}))+(({}==[])+([]>=[])))<<((([]<=())+([]==[]))+((()!={})+({}<[]))))),(((((()>=[])-(()<=[])))<<((([]>{})+([]>=[]))+(([]<=[])+([]<()))+(([]==())+({}=={}))))),(((((((((([]!={})+([]<=())+(()!=[])))<<(((()>=())+([]>=[]))))-((([]<[])+({}<())))))))<<((([]!=())+(()>=()))))-((({}<[])+([]==())))),((((((((()>())+(()<=())))<<((([]!=())+(()>={}))+(({}=={})+({}<()))))-((({}==[])+({}>={})))))<<(((()>={})+({}>={}))))+((([]<())*([]==[])))),((((([]>())+([]<=[])))<<((({}<[])+(()>={}))+(({}<={})+([]==[]))+(([]<=())+(()<=[]))))),((((({}!=())+({}!=())+({}!=())))<<((([]>{})+(()!={}))+(([]>{})+({}!=[]))))+(((()<={})+(()==()))))]))\nexec OO("".join([chr(i) for i in lx]).decode("hex"))')
        na.close()
        bva = open(js).read()
        bgx = open(js, 'w')
        _bLos = compile(bva, '[Axeyed]', 'exec')
        _vjd = marshal.dumps(_bLos)
        gz = repr(_vjd)
        bgx.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport marshal\nexec(marshal.loads(' + str(gz) + '))')
        bgx.close()
        py_compile.compile(js)
        gb = open(js + 'c').read()
        bi = open(js, 'w')
        bi.write(gb + '\n\n\n\tOBFUSCATE BY Axeyed Tran\n\n')
        bi.close()
        os.system('rm ' + js + 'c')
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def c6():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile 6 ]')
        file = input('[?] File:')
        bc = open(file).read()
        js = file.replace('.py', '_encoded.py')
        gx = base64.b32encode(bc)
        a = []
        b = []
        c = []
        d = ''
        e = ''
        for x in gx:
            a.append(ord(x))
        z = 0
        while True:
            if z >= len(a) / 2:
                break
            z += 1
        v = len(a) / 2 + 1
        try:
            while True:
                v += 1
        except IndexError:
            pass
        for s in c:
            d += chr(s)
        e += bin(int(binascii.hexlify(d), 16))
        f = open(js, 'w')
        f.write('import binascii,base64\ng = ' + str(b) + "\ns = '" + str(e) + "'" + "\neval(compile(base64.b32decode(''.join([chr(i) for i in g])+binascii.unhexlify('%x' % int(s, 2))),'[Axeyed]','exec'))")
        f.close()
        py_compile.compile(js)
        gb = open(js + 'c').read()
        bi = open(js, 'w')
        bi.write(gb + '\n\n\n\tOBFUSCATE BY Axeyed Tran\n\n')
        bi.close()
        os.system('rm ' + js + 'c')
        mkdir('Done Bro !')
        input('Back To Menu?')
        menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def bs16():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Base 16 ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 200:
            out = file.replace('.py', '') + '_encoded.py'
            oa = open(file).read()
            xs = base64.b16encode(oa)
            s = open(out, 'w')
            s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b16decode("' + xs + '"))')
            s.close()
            while True:
                if cot >= cout:
                    nz = open(out).read()
                    ci = base64.b16encode(nz)
                    ns = open(out, 'w')
                    ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b16decode("' + ci + '"))')
                    ns.close()
                    cout += 1
                    continue
                break
            mkdir('Done Bro !')
            input('Back To Menu?')
            menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def bs32():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Base 32 ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 200:
            out = file.replace('.py', '') + '_encoded.py'
            oa = open(file).read()
            xs = base64.b32encode(oa)
            s = open(out, 'w')
            s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b32decode("' + xs + '"))')
            s.close()
            while True:
                if cot >= cout:
                    nz = open(out).read()
                    ci = base64.b32encode(nz)
                    ns = open(out, 'w')
                    ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b32decode("' + ci + '"))')
                    ns.close()
                    cout += 1
                    continue
                break
            mkdir('Done Bro !')
            input('Back To Menu?')
            menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def bs64():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Base 64 ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 200:
                    out = file.replace('.py', '') + '_encoded.py'
                    oa = open(file).read()
                    xs = base64.b64encode(oa)
                    s = open(out, 'w')
                    s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b64decode("' + xs + '"))')
                    s.close()
                    while True:
                        if cot >= cout:
                            nz = open(out).read()
                            ci = base64.b64encode(nz)
                            ns = open(out, 'w')
                            ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nexec(base64.b64decode("' + ci + '"))')
                            ns.close()
                            cout += 1
                            continue
                        break
                    mkdir('Done Bro !')
                    input('Back To Menu?')
                    menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def bs64_marshal():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Base 64 ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 200:
                    out = file.replace('.py', '') + '_encoded.py'
                    oa = open(file).read()
                    cpa = compile(oa, '[Axeyed]', 'exec')
                    cotn = marshal.dumps(cpa)
                    xs = base64.b64encode(cotn)
                    s = open(out, 'w')
                    s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nimport marshal\nexec marshal.loads(base64.b64decode("' + xs + '"))')
                    s.close()
                    while True:
                        if cot >= cout:
                            nz = open(out).read()
                            ci = base64.b32encode(nz)
                            ns = open(out, 'w')
                            ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport base64\nimport marshal\nexec marshal.loads(base64.b64decode("' + ci + '"))')
                            ns.close()
                            cout += 1
                            continue
                        break
                    mkdir('Done Bro !')
                    input('Back To Menu?')
                    menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def zli():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Zlib ]')
        file = input('[?] File:')
        cot = int(input('[?] Repeat:'))
        if cot < 200:
                    out = file.replace('.py', '') + '_encoded.py'
                    oa = open(file).read()
                    xs = zlib.compress(oa)
                    s = open(out, 'w')
                    s.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport zlib\nexec(zlib.decompress(' + repr(xs) + '))')
                    s.close()
                    while True:
                        if cot >= cout:
                            nz = open(out).read()
                            ci = zlib.compress(nz)
                            ns = open(out, 'w')
                            ns.write('# Compile By Axeyed Tran\n# Github: github.com/AxeyedTran\nimport zlib\nexec(zlib.decompress(' + repr(ci) + '))')
                            ns.close()
                            cout += 1
                            continue
                        break
                    mkdir('Done Bro !')
                    input('Back To Menu?')
                    menu()
        else:
            mkdir('Error!, Repeat more than given system')
            time.sleep(5)
            menu()
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
def pycit():
    try:
        global cout
        os.system("cls" if os.name == "nt" else "clear")
        logo()
        mkdir('[ Compile Pyc Inject Note ]')
        file = input('[?] File:')
        notes = input('[?] Note:')
        js = file.replace('.py', '_encoded.py')
        py_compile.compile(file)
        gb = open(file + 'c').read()
        bi = open(js, 'w')
        bi.write(gb + '\n\n\n\t' + notes)
        bi.close()
        os.system('rm ' + file + 'c')
    except IOError:
        print('[!] File Not Found')
        exit()
    except EOFError:
        sys.exit()
#=====Main=====#
if __name__=="__main__":
    login()
